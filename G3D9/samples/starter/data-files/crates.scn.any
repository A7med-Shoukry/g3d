// -*- c++ -*-
// You can extend this sample scene file format with your own fields.
// Edit the scene parsing in Scene.cpp.
{
    name = "Crates",
   
    models = {
        groundModel = ArticulatedModel = ArticualtedModel::Specification{
                //filename		= "sponza/sponza.obj";
                filename        = "models/crytek_sponza/sponza/sponza.obj";
			    //filename        = "models/crytek_sponza/sponza/sponza.obj";
                scale = 0.01f;
            };
    };
    
    lighting = Lighting::Specification {
        lightArray = (GLight::spotTarget(Point3(-16.6, 40.4, 15.3), Point3(6,0,-5), 0.3f, Color3(9000.0))
            , GLight::spotTarget(Point3(  5.7,   5.1,  -3.6), Point3(  2.8,   1.9,  -6.4), 0.2f, Color3(4000.0))
            , GLight::spotTarget(Point3(0.7, 6.7, -3.7), Point3( 3.4,  2.2, -0.7), 0.2f, Color3(4000.0))
            
            
            
            
            
            );



        environmentMap = {
            constant = 0.05;
            texture = "cubemap/noonclouds/noonclouds_*.png";
        };
    };
    
    entities = {
        // Each entity has a name and is an instance of a model.  The instantiation syntax accepts
        // two (optional) arguments: a position spline (which can be a single position), and a 
        // pose spline (which can be a single pose).
        
        
        
        ground = Entity {
            model    = "groundModel";
            position = CFrame::fromXYZYPRDegrees(0, -0.01, 0, 45);
        };
    };
        
    camera = GCamera {
        coordinateFrame = CFrame::fromXYZYPRDegrees( -0.0f,   0.6f,   1.8f,  341.1f,  -0.0f,   0.0f);
        
        nearPlaneZ = -0.2;
        farPlaneZ = -100;
        fovDirection = "VERTICAL";
        fovDegrees = 60;
    };
}
